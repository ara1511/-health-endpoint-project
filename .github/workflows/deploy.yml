name: Deploy - Health Endpoint Service

# Ejecutar solo en push a main
on:
  push:
    branches: [ main ]
  workflow_dispatch: # Permitir ejecución manual

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: []  # Agregar dependencia del CI si existe
    
    # Solo ejecutar si los tests pasaron
    if: github.ref == 'refs/heads/main'
    
    steps:
    # Checkout del código
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    # Configurar Node.js
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    # Instalar dependencias
    - name: 📦 Install dependencies
      run: npm ci --only=production
    
    # Build Docker image
    - name: 🐳 Build Docker image
      run: |
        docker build -t health-endpoint:latest .
        docker tag health-endpoint:latest health-endpoint:${{ github.sha }}
    
    # Test de deployment local
    - name: 🧪 Test deployment
      run: |
        # Ejecutar contenedor
        docker run -d -p 3000:3000 --name health-test health-endpoint:latest
        
        # Esperar que esté listo
        sleep 10
        
        # Test del health check
        response=$(curl -s http://localhost:3000/health)
        if echo "$response" | grep -q '"status":"ok"'; then
          echo "✅ Deployment test passed!"
        else
          echo "❌ Deployment test failed!"
          exit 1
        fi
        
        # Limpiar
        docker stop health-test
        docker rm health-test
    
    # Aquí puedes agregar deployment real a tu plataforma
    # Ejemplos comentados:
    
    # Deploy to Heroku
    # - name: 🚀 Deploy to Heroku
    #   uses: akhileshns/heroku-deploy@v3.12.12
    #   with:
    #     heroku_api_key: ${{secrets.HEROKU_API_KEY}}
    #     heroku_app_name: "your-health-endpoint-app"
    #     heroku_email: "your-email@example.com"
    
    # Deploy to AWS ECS
    # - name: 🚀 Deploy to AWS ECS
    #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
    #   with:
    #     task-definition: task-definition.json
    #     service: health-endpoint-service
    #     cluster: production-cluster
    
    - name: ✅ Deployment completed
      run: echo "🎉 Health endpoint deployed successfully!"